/*
Copyright 2011 Jesse Doherty, Soroush Radpour and McGill University.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

*/

import java.util.Set;
import java.util.LinkedHashSet;

aspect LValue
{

    syn lazy Set<String> ASTNode.getLValues()
    {
        Set<String> names = new LinkedHashSet<String>();
        for( int i=0; i<getNumChild(); i++ )
            names.addAll( getChild(i).getLValues() );
        return names;
    }

    //getLValues equations for Statements
    eq AssignStmt.getLValues() = getLHS().getSymbols();
    eq GlobalStmt.getLValues() 
    {
        Set<String> names = new LinkedHashSet<String>();
        for( int i=0; i<getNumName(); i++ ){
            names.add(getName(i).getID());
        }
        return names;
    }
    eq PersistentStmt.getLValues() 
    {
        Set<String> names = new LinkedHashSet<String>();
        for( int i=0; i<getNumName(); i++ ){
            names.add(getName(i).getID());
        }
        return names;
    }
   
    syn Set<String> ASTNode.getSymbols()
    {
        Set<String> symbols = new LinkedHashSet<String>();
        for( int i = 0; i<getNumChild(); i++ )
            symbols.addAll( getChild(i).getSymbols() );
        return symbols;
    }

    syn Set<String> Name.getSymbols()
    {
        Set<String> names = new LinkedHashSet<String>();
        names.add( getID() );
        return names;
    }

    //getSymbols equations for Expressions
    eq NameExpr.getSymbols() = getName().getSymbols();
    eq ParameterizedExpr.getSymbols() = getTarget().getSymbols();
    eq CellIndexExpr.getSymbols() = getTarget().getSymbols();
    eq DotExpr.getSymbols() = getTarget().getSymbols();

    syn Set<NameExpr> ASTNode.getNameExpressions()
    {
        Set<NameExpr> symbols = new LinkedHashSet<NameExpr>();
        for( int i = 0; i<getNumChild(); i++ )
            symbols.addAll( getChild(i).getNameExpressions() );
        return symbols;
    }

    //getNameExpressions equations for Expressions
    eq NameExpr.getNameExpressions()
    {	
        LinkedHashSet<NameExpr> names = new LinkedHashSet<NameExpr>();
        names.add( this );
        return names;
    }
    eq ParameterizedExpr.getNameExpressions() = getTarget().getNameExpressions();
    eq CellIndexExpr.getNameExpressions() = getTarget().getNameExpressions();
    eq DotExpr.getNameExpressions() = getTarget().getNameExpressions();
}
